First we clarify some concepts: Opendaylight platform acts as the NOS in
SoftMoW (you can refer to the paper). RecA and Mobility are two apps on
top of the NOS. 

Currently Opendaylight has a topology discovery module. Its link
discovery (LD) has its own format. The details is in this file:
~/opendaylight-source/opendaylight/protocol_plugins/openflow/src/main/java/org/opendaylight/controller/protocol_plugin/openflow/internal/DiscoveryService.java
This is in the Opendaylight platform (also the NOS in SoftMoW).

SoftMoW LD message has its own format. Aparently when RecA gets an
Opendaylight LD message (from parent or from bottom), RecA
has no idea what it means; and if RecA sends SoftMoW LD messages, the
Opendaylight discovery module cannot recognize it (so the inter-region
links are not discovered).

I think there are two approaches to implement topology discovery.
(1) Implement the SoftMoW LD message in the Opendaylight platform:
modify the file above (the LD message should have a stack to record the
hierarchy). This change is transparent to RecA and Mobility; they can
just use the routing and topology manager service without worrying about
the inter-region link discovery. 
When running the controller, you need first install Opendaylight
platform, then install softmow, and finally run softmow.

Cons: This approach needs to modify the Opendaylight platform,
developers need to look into the details. There are some details about
the message passing in the Opendaylight core. I am not quite clear right
now, you can look into it.

(2) Implement the SoftMoW LD message in RecA. RecA has the logic of
sending/receiving and processing SoftMoW LD message. The Opendaylight
Discovery module would ignore the message due to unknown format. Then
RecA use the topologymanager to update the topology in the core
(ITopologyManager.addUserLink()). I am not sure whether the routing
service would use the user updated topology (hopefully it will). If not
you cannot use routing service in RecA and Mobility; instead you need to
get the topology first and compute the route by your own.
This approach seems easier than modifying the core. It may need more
lines of code (e.g. the routing based on custom topology).
You also need to make the RecA listen to packet-in
message and find the SoftMoW LD message from the Opendaylight platform. 


